version: '3.7'

services:
  drone:
    image: drone/drone:1.9.0
    volumes:
      - "./data/drone:/data"
    env_file: .env
    environment:
      - DRONE_SERVER_HOST=drone.${KITT_DOMAIN}
      - DRONE_SERVER_PROTO=https
      - DRONE_REGISTRATION_CLOSED=true
      - DRONE_LIMIT_EVENTS=push,tag
    links:
      - drone-vault
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone.entrypoints=https"
      - "traefik.http.routers.drone.rule=Host(`drone.${KITT_DOMAIN}`)"
      - "traefik.http.services.drone.loadbalancer.server.port=80"
  drone-runner:
    image: drone/drone-runner-docker:1.4.0
    env_file: .env
    environment:
      - DRONE_RPC_SECRET
      - DRONE_RPC_HOST=drone
      - DRONE_RPC_PROTO=http
      - DRONE_RUNNER_CAPACITY=2
      - DRONE_RUNNER_NAME=runner
      - DRONE_SECRET_PLUGIN_ENDPOINT=http://drone-vault:3000
      - DRONE_SECRET_PLUGIN_TOKEN
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    links:
      - drone
      - drone-vault
  drone-vault:
    image: drone/vault:1.2.0
    environment:
      - DRONE_DEBUG=true
      - DRONE_SECRET
      - VAULT_ADDR=https://vault.${KITT_DOMAIN}
      - VAULT_TOKEN
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.drone-vault.entrypoints=https"
      - "traefik.http.routers.drone-vault.rule=Host(`drone-vault.${KITT_DOMAIN}`)"
      - "traefik.http.services.drone-vault.loadbalancer.server.port=3000"

networks:
  default:
    external:
      name: kitt
